# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: docker build
        run: docker build -t kanishkaw/docker-react -f Dockerfile.dev .
      - name: test runs
        run: docker run kanishkaw/docker-react npm run test -- --coverage --watchAll=false
      # Zip Dockerfile for upload
      - name: Generate Deployment Package
        run: zip -r deploy.zip * -x "**node_modules**"
      - name: Beanstalk Deploy for app
        uses: einaregilsson/beanstalk-deploy@v10
        with:
          aws_access_key: ${{secrets.AWS_ACCESS_REACT_KEY_ID}}
          aws_secret_key: ${{secrets.AWS_SECRET_ACCESS_REACT_KEY}}
          application_name: "docker-react3"
          environment_name: "Dockerreact3-env"
          region: "us-east-1"
          version_label: "react-demo-new-${{ steps.format-time.outputs.replaced }}"
          use_existing_version_if_available: true 
          deployment_package: deploy.zip

      - name: Deployed!
        run: echo App deployed to ELB
